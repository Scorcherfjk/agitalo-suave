---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import BlogLayout from "../../layouts/BlogLayout.astro";
import { formatDate } from "../../utils";
import Alert from "../../components/Alert.astro";
import BlogEntries from "../../components/BlogEntries.astro";

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: `${post.data.type}/${post.slug}` },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { title, image, date, updated, excerpt, tags, draft } = post.data;

const { Content } = await post.render();
---

<BlogLayout title={title} description={excerpt} tags={tags} image={image}>
  <Image alt={title} src={image} class="object-cover w-full h-[350px]" />
  <article class="bg-background">
    <div class="mx-5">
      <a href="/blog">
        <div class="inline-flex items-center gap-2 mt-5 text-primary">
          <Icon name="arrow-right" class="w-5 h-5 rotate-180 inline" /> Ir al Blog
        </div>
      </a>
      <h1 class="text-3xl">{title}</h1>
      <div>
        <span class="text-xs text-gray-500">{formatDate(date)}</span>
        { date.getTime() !== updated.getTime() &&
        (<span class="text-xs text-gray-400"> - Actualizado el {formatDate(updated)}</span>)}

      </div>

      {
        draft && (
          <Alert
            title="En Construccion"
            description="Esta página no ha sido completada, por lo que la información puede presentar errores"
          />
        )
      }

      <Content />
    </div>
  </article>
  <BlogEntries max={4} />
</BlogLayout>
